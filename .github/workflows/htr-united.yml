# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: HTR United Workflow

on: [push, pull_request]

jobs:
  ChocoMufin:  # Tests that the characters used in the transcription are allowed or known
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install chocomufin==0.0.4
    - name: Run ChocoMufin
      run: |
        chocomufin control table.csv fra/**/*.xml lat/**/*.xml
  HTRUC:  # Tests that the catalog is correctly written
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install htruc
    - name: Run HTRUC
      run: |
        htruc test htr-united.yml
  HTRVX:  # Test that the data are following the right format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install htrvx
    - name: Run HTRVX
      run: |
        htrvx --verbose --group --format alto --segmonto --xsd --check-empty fra/**/*.xml lat/**/*.xml
  HTR_United_Metadata_Generator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install htr-united-metadata-generator htruc anybadge
    - name: Run Report
      run: |
        humGenerator --group fra/**/*.xml lat/**/*.xml --github-envs --to-json updated_metrics.json
        cat envs.txt >> $GITHUB_ENV
    - name: "Automatically update the catalog's volume key on master branch"
      if: github.ref == 'refs/heads/main'
      run: |
        htruc update-volumes htr-united.yml updated_metrics.json --inplace
        # Generate badges
        mkdir -p badges
        anybadge --value=${{ env.HTRUNITED_CHARS }} --file=badges/characters.svg --label=Characters --color=#007ec6 --overwrite --template .github/assets/badge.svg
        anybadge --value=${{ env.HTRUNITED_REGNS }} --file=badges/regions.svg --label=Regions --color=#007ec6 --overwrite --template .github/assets/badge.svg
        anybadge --value=${{ env.HTRUNITED_LINES }} --file=badges/lines.svg --label=Lines --color=#007ec6 --overwrite --template .github/assets/badge.svg
        anybadge --value=${{ env.HTRUNITED_FILES }} --file=badges/files.svg --label="XML Files" --color=#007ec6 --overwrite --template .github/assets/badge.svg
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add htr-united.yml ./badges/
        git commit -m "[Automatic] Update of the Catalog & Badges" || echo "Nothing to commit"
        git push
